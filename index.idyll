[meta title:"Effective Visualization of Hierarchies" description:"An introduction and discussion of indented charts and iclicle plots for effectively visualizing hierarchical data." /]

[data name:"hierarchy" source:"hierarchy.json" /]
[data name:"vis-config" source:"vis-config.json" /]

[Fixed]
  [^](#top)
[/Fixed]

[Header
  fullWidth:true
  title:"Effective Visualization of Hierarchies"
  subtitle:"Using Indented Charts and Icicle Plots"
  author:"Fabian Beck"
  authorLink:"https://github.com/fabian-beck"
  background:"#110934"
  color:"#ffffff"
   /]

[div className:"toc"]
  [Aside]
    #### Contents

    [ul]
      [li][Introduction](#introduction)[/li]
      [li][Indented Charts](#indented-charts)[/li]
      [li][Icicle Plots](#icicle-plots)[/li]
      [li][Discussion](#discussion)[/li]
      [li][Application Example](#application-example)[/li]
      [li][Conclusion](#conclusion)[/li]
      [li][About](#about)[/li]
    [/ul]
  [/Aside]
[/div]

## Introduction

When it comes to visualizing hierarchically organized data, you often see [Annotation][Graphic]Nodes drawn as circles in layers and being connected by links[/Graphic]*node-link diagrams*[/Annotation] and [Annotation][Graphic]Recursively subdivided boxes[/Graphic]*treemaps*[/Annotation] promoted as the main types of diagrams. They are definitly interesting options, but two other techniques—sometimes forgotton—might be the true work horses of hierarchy visualization: 

[p className:"centered"] **Indented Charts** and **Icicle Plots** [/p]

## Indented Charts

[Aside]
  Not even a visualization?
[/Aside]

So simple and known from file browsers and other user interfaces, indented charts might not even be considered a visualization, but just a user interface component like a list. Their characteristic feature is that the elements of the hierarchy are vertically listed below each other with **increasing horizontal intentation per level**. Child elements directly follow their parents.

[var name:"scrollerIndex" value:0 /]
[Scroller currentStep:scrollerIndex]
  [Graphic style:`{width: 600, margin: 'auto'}`]
      [IndentedD3Component data:hierarchy config:vis-config index:scrollerIndex/]
  [/Graphic]

  [Step]
    ### Base Layout
    
    Let's visualize a simple hierarchy showing a directory of files as an indented charts. Just the labels of the files and indentation is sufficient to see the hierarchical structure.
  [/Step]

  [Step]
    ### Hierarchy Levels
    
    Additional lines can mark the levels of the hierarchy and help trace which child nodes belong to a parent.
  [/Step]

  [Step]
    ### Visual Nodes
    
    We can also draw circles to get a graphical representation of each node.
  [/Step]

  [Step]
    ### Node Types
    
    These can be used, for instance, to visualize the type of the node as a color.
  [/Step]

  [Step]
    ### Node Size
    
    And, very useful for files, the area of the circles may encode the sizes of the respective files and directories.
  [/Step]

[/Scroller]

### Comparison to Node-Link Diagrams

[Aside]
  Yet another node-link layout?
[/Aside]

Generally, an indented charts can be considered a variant of node-link diagram, in a simple layout where all nodes are placed below each other. You may have notices that the list-like layout makes it straightforward to print labels for each node, and there is sufficient space for longer labels. In contrast, most other node-link layouts, though being slightly more compact, run into certain problems for placing labels. Especially diffult to label are those that use a radial layout, also because rotated texts gets more difficult to read for increasing rotation angles.

## Icicle Plots

[Aside]
  Icicles, flames, and sunbursts
[/Aside]

In contrast to indented charts, an icicle plot focuses more on providing a good overview of the sizes of the hierarchy nodes. In this regard, it is similar to a treemap where the size of the nodes is enconded in the rectangular area they fill. But instead of nesting the nodes, the icicle plots just starts with a full-width rectangle  and attaches the child nodes below their parent as rectangle scaled according to their sizes. From a distance, these vertically appended rectangles somewhat resemble hanging icicles. If arrange from bottom to top instead (and colored in red-orange colors), they more look like flames and are sometimes called *flame graphs*, respectively. Radial variants usually go under the term *sunburst*.

[var name:"scrollerIndex2" value:0 /]
[Scroller currentStep:scrollerIndex2]
  [Graphic style:`{maxWidth: 600, margin: "auto", padding: 10}`]
      [IcicleD3Component data:hierarchy config:vis-config index:scrollerIndex2/]
  [/Graphic]

  [Step]
    ### Base Layout
    
   But let's first ignore the sizes—assume all files in our example have the same size. In the resulting base layout, the root node is placed at the top width full width. The level below subdivided into the respective directories and files in way that the directories consume a width proportial to the number of contained files. And so on, this is done for the next levels.
  [/Step]

  [Step]
    ### Node Types
    
   Again, we can use colors to discern the different types of files.
  [/Step]

  [Step]
    ### Node Sizes
    
    And finally, the nodes can be scaled according to the respective file sizes. As a consequence, the widths of directory nodes also adapt and match the summed sizes of the contained files.
  [/Step]

[/Scroller]

You might have noticed that placing the labels is sometimes tricky in an icicle plot. For bigger nodes, there is usually enough space to print the full label. But for smaller ones, they need to be cut or cannot be printed at all. However, depending on the application, this might not be a bigger issues if size corresponds to importance. For instance, investigating which files consume most space on our hard disk, we would not be intrested in the files and their names anyways.

### Comparison to Treempas

## Discussion

### Scaling it up to Larger Hierarchies

## Application Example

## Conclusion

## About

* This article was created using [Idyll](https://idyll-lang.org).
* The source code is available on [GitHub](https://github.com/vis-uni-bamberg/hierarchy-vis) under MIT license.
